name: Node.js CI/CD for MitraAI

on:
  push:
    branches: [ "main" ]

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x , 22.x]
    defaults:
      run:
        working-directory: ./Frontend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: Frontend/package-lock.json

    - name: Install Frontend Dependencies
      run: npm ci

    - name: Lint Frontend
      run: npm run lint

    - name: Build Frontend
      run: npm run build --if-present
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}

    - name: Deploy Frontend to Vercel
      run: |
        cd ..
        npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  build_backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x , 22.x]
    defaults:
      run:
        working-directory: ./Backend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: Backend/package-lock.json

    - name: Install Backend Dependencies
      run: npm ci
    

    - name: Deploy Backend to Render
      run: curl -X POST "$RENDER_DEPLOY_HOOK"
      env:
        RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
